#include <string>
#include <vector>


using namespace std;

int solution(vector<vector<int>> board, vector<int> moves) {
    int answer = 0;
    vector<int> bukket(1, 0);
    
    // moves 순서에 맞게 작동
    for(int i = 0;i<moves.size();i++){
        // 위칸부터 비어있는 칸인지 확인하며 순차 검색
        for(int j = 0;j<board.size();j++){
            //비어있지 않는 경우 
            if(board[j][moves[i] - 1] != 0){
                if(bukket[bukket.size() - 1] == board[j][moves[i] - 1]){
                    // 바구니에 담겨진 마지막 인형과 현재 선택한 인형이 같은 경우
                    answer += 2;
                    bukket.pop_back();
                    
                }
                else{
                    // 바구니에 담겨진 마지막 인형과 현재 선택한 인형이 다른 경우
                    bukket.push_back(board[j][moves[i] - 1]);                    
                }
                // 선택한 인형은 보드에서 제외
                board[j][moves[i] - 1] = 0;                
                break;
            }
        }
    }

    
    return answer;
}
